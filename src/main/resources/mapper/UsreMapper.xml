<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.musicplayer.dao.UserDao">

    <!-- 这里的id关联的是UserDao中的方法的名称,参数的类型为对象 -->
    <insert id="add" parameterType="User">
		insert into user(userId,userName,password) values(#{userId},#{userName},#{password})
	</insert>
	
	<update id="update" parameterType="User">
		update user set userName = #{userName},password = #{password} where userId = #{userId}
	</update>
	
	<!-- 这里的id关联的是UserDao中的方法的名称，因为删除的时候是根据id删除的，参数只需要是个id就可以了 -->
	<!--  
	<delete id="delete" parameterType="Integer">
		delete from user where userId = #{userId}
	</delete>
	 -->
	
	<!-- 这里的id关联的是UserDao中的方法的名称，根据id查询，传入参数id，返回值类型为对象（这里返回的是一张表里的信息），便于读取信息 -->
	<!-- 这里并不需要对用户进行查询，对歌手和歌曲操作的时候需要这个方法， -->
	<!-- <select id="findByID" parameterType="Integer" resultType="User">
		   select * from user where userId = #{userId}
	     </select> -->
	<!-- 
	<resultMap type="User" id="userMap">
	-->
	    <!-- 下面的id是主键的书写方式 -->
	    <!-- 
		<id column="id" property="id"/>
		-->
		<!-- 其他列的书写方式 -->
		<!-- 
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="email" property="email"/>
		 -->
		<!-- 下面的 association是关联别的表的外键的时候用到的，关联的方式有很多中，下面的只是其中一种-->
		<!-- <association property="" column=""></association> -->
	<!-- 
	</resultMap>
	-->
	<!-- 这里的id关联的是UserDao中的方法的名称，这里是多张表的查询，resultMap关联上面的resultMap -->
	<!-- 
	<select id="findAll" resultMap="userMap">
	-->
	    <!-- 如果这里面关联了好几张表，对应的sql语句也是多表查询的语句 -->
		<!-- 
		   select * from user
		-->
	<!-- 
	</select>
	-->
	

</mapper>